[gd_scene load_steps=5 format=3 uid="uid://clfwb30yr83v1"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_sffpn"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_1fgr4"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_2m502"]
bg_color = Color(0.376471, 0.423529, 0.929412, 1)

[sub_resource type="GDScript" id="GDScript_l0lku"]
script/source = "@tool
extends Button

signal choosed(is_choosed:bool,meta1:int)
var root1:Control
# Called when the node enters the scene tree for the first time.
func _ready():
	root1 = get_tree().get_first_node_in_group(\"export_root\")
	if not choosed.is_connected(root1.export_edit):
		choosed.connect(root1.export_edit)
	#if not choosed.is_connected(root1.choose_arr_add):
		#choosed.connect(root1.choose_arr_add)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass


func _on_toggled(toggled_on):
	if toggled_on:
		emit_signal(\"choosed\",true,get_meta(\"te\"))
	if not toggled_on:
		emit_signal(\"choosed\",false,get_meta(\"te\"))
	if root1.task_dict.has(get_meta(\"te\")):
		if root1.task_dict[get_meta(\"te\")] != []:
			text = root1.task_dict[get_meta(\"te\")][0]


"

[node name="Button" type="Button"]
custom_minimum_size = Vector2(80, 30)
theme_override_colors/font_pressed_color = Color(0, 0, 0.768627, 1)
theme_override_font_sizes/font_size = 13
theme_override_styles/normal = SubResource("StyleBoxFlat_sffpn")
theme_override_styles/hover = SubResource("StyleBoxFlat_1fgr4")
theme_override_styles/pressed = SubResource("StyleBoxFlat_2m502")
toggle_mode = true
text = "task1"
script = SubResource("GDScript_l0lku")
metadata/te = 1234

[connection signal="toggled" from="." to="." method="_on_toggled"]
